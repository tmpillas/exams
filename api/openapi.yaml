openapi: 3.0.0
info:
  title: Blog API
  description: API for managing blog posts and comments
  version: 1.0.0
servers:
- url: /
paths:
  /posts:
    get:
      summary: Get all blog posts
      operationId: postsGET
      responses:
        "200":
          description: A list of blog posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"
                x-content-type: application/json
      x-swagger-router-controller: Default
    post:
      summary: Create a new blog post
      operationId: postsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
        required: true
      responses:
        "201":
          description: The created blog post
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
      x-swagger-router-controller: Default
  /posts/{postId}:
    get:
      summary: Get a specific blog post
      operationId: postsPostIdGET
      parameters:
      - name: postId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The requested blog post
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
      x-swagger-router-controller: Default
    put:
      summary: Update a blog post
      operationId: postsPostIdPUT
      parameters:
      - name: postId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
        required: true
      responses:
        "200":
          description: The updated blog post
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
      x-swagger-router-controller: Default
    delete:
      summary: Delete a blog post
      operationId: postsPostIdDELETE
      parameters:
      - name: postId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: Blog post deleted successfully
      x-swagger-router-controller: Default
  /posts/{postId}/comments:
    get:
      summary: Get comments for a blog post
      operationId: postsPostIdCommentsGET
      parameters:
      - name: postId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: A list of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
                x-content-type: application/json
      x-swagger-router-controller: Default
    post:
      summary: Add a comment to a blog post
      operationId: postsPostIdCommentsPOST
      parameters:
      - name: postId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
        required: true
      responses:
        "201":
          description: The created comment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
      x-swagger-router-controller: Default
components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
      example:
        id: 0
        title: title
        content: content
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        postId:
          type: integer
          format: int64
        text:
          type: string
      example:
        id: 0
        postId: 6
        text: text
